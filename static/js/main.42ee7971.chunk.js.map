{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","map","infoComent","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","normalizeData","postsFromServer","usersFromServer","find","userId","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"408IAAaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,mCACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCD,EAAQE,OAE9C,OAED,mBAAGD,UAAU,qBAAqBE,KAAI,iBAAYH,EAAQI,OAA1D,SACGJ,EAAQI,WAIb,qBAAKH,UAAU,oBAAf,SACGD,EAAQK,aCXJC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,mCACE,qBAAKN,UAAU,cAAf,SACGM,EAASC,KAAI,SAAAC,GAAU,OACtB,cAAC,EAAD,CAAaT,QAASS,GAAiBA,EAAWC,aCL7CC,G,YAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mCACE,mBAAGX,UAAU,WAAWE,KAAI,iBAAYS,EAAKR,OAA7C,SACGQ,EAAKV,WCDCW,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKb,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCa,EAAKC,QAEtC,8BACG,eAED,cAAC,EAAD,CAAUH,KAAME,EAAKF,aAKzB,mBAAGX,UAAU,iBAAb,SAA+Ba,EAAKT,OAEpC,uBAECS,EAAKP,SAASS,OAAS,EACpB,cAAC,EAAD,CAAaT,SAAUO,EAAKP,WAC5B,mBAAG,UAAQ,oBAAX,iCCrBKU,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKjB,UAAU,WAAf,SACGiB,EAAMV,KAAI,SAAAM,GAAI,OAAI,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,UCGjDS,EAAgBC,EAAgBZ,KAAI,SAAAM,GAAI,kCACzCA,GADyC,IAE5CF,KAAMS,EAAgBC,MAAK,SAAAV,GAAI,OAAIE,EAAKS,SAAWX,EAAKF,MACxDH,SAAUiB,EACPC,QAAO,SAAAzB,GAAO,OAAIA,EAAQ0B,SAAWZ,EAAKJ,WAGlCiB,EAAM,kBACjB,0BAAS1B,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUiB,MAAOC,QCbrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.42ee7971.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => (\n  <>\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{comment.name}</strong>\n\n        {' by '}\n\n        <a className=\"CommentInfo__email\" href={`mailto:${comment.email}`}>\n          {comment.email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {comment.body}\n      </div>\n    </div>\n  </>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <>\n    <div className=\"CommentList\">\n      {comments.map(infoComent => (\n        <CommentInfo comment={infoComent} key={infoComent.id} />))}\n    </div>\n  </>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <>\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  </>\n);\n","import { CommentList } from '../CommentList';\nimport './PostInfo.scss';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{post.title}</h3>\n\n      <p>\n        {' Posted by  '}\n\n        <UserInfo user={post.user} />\n\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">{post.body}</p>\n\n    <hr />\n\n    {post.comments.length > 0\n      ? <CommentList comments={post.comments} />\n      : <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    }\n\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => <PostInfo post={post} key={post.id} />)}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nconst normalizeData = postsFromServer.map(post => ({\n  ...post,\n  user: usersFromServer.find(user => post.userId === user.id),\n  comments: commentsFromServer\n    .filter(comment => comment.postId === post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={normalizeData} />\n\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}